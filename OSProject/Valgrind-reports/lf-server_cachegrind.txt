==16739== Cachegrind, a cache and branch-prediction profiler
==16739== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==16739== Using Valgrind-3.18.1-42b08ed5bd-20211015 and LibVEX; rerun with -h for copyright info
==16739== Command: ./lf-server
==16739== 
--16739-- Valgrind options:
--16739--    --tool=cachegrind
--16739--    -v
--16739--    --error-exitcode=99
--16739-- Contents of /proc/version:
--16739--   Linux version 6.8.0-47-generic (buildd@lcy02-amd64-019) (x86_64-linux-gnu-gcc-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0, GNU ld (GNU Binutils for Ubuntu) 2.38) #47~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Wed Oct  2 16:16:55 UTC 2
--16739-- 
--16739-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-rdrand-rdseed
--16739-- Page sizes: currently 4096, max supported 4096
--16739-- Valgrind library directory: /usr/libexec/valgrind
--16739-- warning: L3 cache found, using its data for the LL simulation.
==16739== Cache configuration used:
==16739==   I1: 32,768 B, 8-way, 64 B lines
==16739==   D1: 49,152 B, 12-way, 64 B lines
==16739==   LL: 6,291,456 B, 12-way, 64 B lines
--16739-- Reading syms from /home/shirel/Pictures/OS-final-project/OSProject/lf-server
--16739-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
--16739--   Considering /usr/lib/debug/.build-id/41/86944c50f8a32b47d74931e3f512b811813b64.debug ..
--16739--   .. build-id is valid
--16739-- Reading syms from /usr/libexec/valgrind/cachegrind-amd64-linux
--16739--    object doesn't have a symbol table
--16739--    object doesn't have a dynamic symbol table
--16739-- Scheduler: using generic scheduler lock implementation.
==16739== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-16739-by-shirel-on-???
==16739== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-16739-by-shirel-on-???
==16739== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-16739-by-shirel-on-???
==16739== 
==16739== TO CONTROL THIS PROCESS USING vgdb (which you probably
==16739== don't want to do, unless you know exactly what you're doing,
==16739== or are doing some strange experiment):
==16739==   /usr/bin/vgdb --pid=16739 ...command...
==16739== 
==16739== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==16739==   /path/to/gdb ./lf-server
==16739== and then give GDB the following command
==16739==   target remote | /usr/bin/vgdb --pid=16739
==16739== --pid is optional if only one valgrind process is running
==16739== 
--16739-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--16739--    object doesn't have a symbol table
--16739-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30
--16739--    object doesn't have a symbol table
--16739-- Reading syms from /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
--16739--    object doesn't have a symbol table
--16739-- Reading syms from /usr/lib/x86_64-linux-gnu/libc.so.6
--16739--   Considering /usr/lib/debug/.build-id/49/0fef8403240c91833978d494d39e537409b92e.debug ..
--16739--   .. build-id is valid
--16739-- Reading syms from /usr/lib/x86_64-linux-gnu/libm.so.6
--16739--   Considering /usr/lib/debug/.build-id/a5/08ec5d8bf12fb7fd08204e0f87518e5cd0b102.debug ..
--16739--   .. build-id is valid
LF- waiting for connections...
LF-server new connection from 127.0.0.1 on socket 4
act received: newgraph command size: 3
Action received: newgraph 4 5
 from client 4
Creating new graph with 4 vertices and 5 edges
Graph created successfully
act received: mst command size: 2
Action received: mst from client 4
act received: mst command size: 2
Action received: mst from client 4
LF-server: socket 4 hung up

LF-server: cleaning up resources...
LF-server: Graphs freed,
LF-server: Clients freed,
Good Bye!
==16739== 
==16739== I   refs:      11,103,175
==16739== I1  misses:        14,679
==16739== LLi misses:         5,454
==16739== I1  miss rate:       0.13%
==16739== LLi miss rate:       0.05%
==16739== 
==16739== D   refs:       5,718,974  (3,282,228 rd   + 2,436,746 wr)
==16739== D1  misses:        25,563  (   19,466 rd   +     6,097 wr)
==16739== LLd misses:        12,530  (    8,284 rd   +     4,246 wr)
==16739== D1  miss rate:        0.4% (      0.6%     +       0.3%  )
==16739== LLd miss rate:        0.2% (      0.3%     +       0.2%  )
==16739== 
==16739== LL refs:           40,242  (   34,145 rd   +     6,097 wr)
==16739== LL misses:         17,984  (   13,738 rd   +     4,246 wr)
==16739== LL miss rate:         0.1% (      0.1%     +       0.2%  )
